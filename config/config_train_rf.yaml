logging:
  log_path: "src/data_pipeline/logs/training/train_rf.log"
  log_level: "INFO"

data:
  target_column: "churn"
  # train_path: "data/processed/preprocessed.csv"

model_selection:
  model_choice:
    - "random_forest"
  primary_metric: "roc_auc"
  performance_threshold:
    accuracy: 0.7
    roc_auc: 0.75

hyperparameters:
  random_forest:
<<<<<<< HEAD
    n_estimators: [60, 200]         
    max_depth: [10, 20, null]      
    max_features: ["sqrt", "log2"]   
    min_samples_split: [2, 5]        
    min_samples_leaf: [1, 2]        

cv:
  n_splits: 3      
  scoring: "roc_auc"
  n_jobs: -1        
  verbose: 1

resampling:
  apply_smotetomek: true  
=======
    n_estimators: [200, 400, 600]
    max_depth: [10, 20, 30, null]       # null = unlimited depth
    max_features: ["sqrt", "log2", null] # valid options: sqrt, log2, or None
    min_samples_split: [2, 5, 10]
    min_samples_leaf: [1, 2, 4]

cv:
  n_splits: 10
  scoring: "roc_auc"
  n_jobs: 6
  verbose: 1

resampling:
  apply_smotetomek: true  # SMOTETomek for handling class imbalance
>>>>>>> ed862b2b0c5d6b4ad459fa709457b0702429c89a

experiment_name: "Customer Churn Model Training"

mlflow:
  registered_model_name: "customer_churn_model"

model:
  random_state: 42
  test_size: 0.2
<<<<<<< HEAD
  n_estimators: 100          
  max_depth: null           
=======
  n_estimators: 100          # number of trees
  max_depth: null            # None in Python â†’ unlimited depth
>>>>>>> ed862b2b0c5d6b4ad459fa709457b0702429c89a
  min_samples_split: 2
  min_samples_leaf: 1
  max_features: "sqrt"       # allowed values: sqrt, log2, or None
  bootstrap: true

output:
  model_dir: "models"
